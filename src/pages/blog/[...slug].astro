---
import { type CollectionEntry, getCollection } from 'astro:content';
import { getEntry } from 'astro:content';
import BackToTop from '@/components/common/BackToTop.astro';
import BackgroundGrid from '@/components/common/BackgroundGrid.astro';
import Visitor from '@/components/common/Visitor';
import License from '@/components/features/post/License.astro';
import PostHeader from '@/components/features/post/PostHeader.astro';
import PostNavigation from '@/components/features/post/PostNavigation.astro';
import PostSummary from '@/components/features/post/PostSummary';
import RelatedPosts from '@/components/features/post/RelatedPosts.astro';
import BaseLayout from '@/components/layouts/BaseLayout.astro';
import IconMessageCircle from '~icons/tabler/message-circle';
import IconSeparator from '~icons/tabler/separator';
import { AUTHOR } from '@/consts';

export async function getStaticPaths() {
  const posts = await getCollection('blog');
  const sortedPosts = posts.sort((a, b) => b.data.date.valueOf() - a.data.date.valueOf());

  return sortedPosts.map((post, index) => {
    const next = index + 1 < sortedPosts.length ? sortedPosts[index + 1] : null;
    const prev = index - 1 >= 0 ? sortedPosts[index - 1] : null;
    return {
      params: { slug: post.slug },
      props: { post, prev, next },
    };
  });
}

type Props = {
  post: CollectionEntry<'blog'>;
  prev: CollectionEntry<'blog'> | null;
  next: CollectionEntry<'blog'> | null;
};

const { post, prev, next } = Astro.props;
const { Content } = await post.render();
const { title, tldr, date, tags = [], cover, keywords } = post.data;
const modifiedDate = post.data.date;

const entry = await getEntry('blog', post.slug);
const raw = entry?.body;

const jsonLd = {
  '@context': 'https://schema.org',
  '@type': 'BlogPosting',
  headline: title,
  description: tldr,
  datePublished: date.toISOString(),
  dateModified: modifiedDate ? modifiedDate.toISOString() : date.toISOString(),
  author: {
    '@type': 'Person',
    name: AUTHOR,
  },
  publisher: {
    '@type': 'Organization',
    name: AUTHOR,
    logo: {
      '@type': 'ImageObject',
      url: new URL('/favicon.svg', Astro.site).toString(),
    },
  },
  mainEntityOfPage: {
    '@type': 'WebPage',
    '@id': new URL(Astro.url.pathname, Astro.site).toString(),
  },
};
---

<BaseLayout title={title} description={tldr} ogImage={cover}>
  <Fragment slot="head">
    {date && <meta name="date" content={date.toLocaleDateString()} />}
    {keywords && <meta name="keywords" content={keywords.join(', ')} />}
    <script type="application/ld+json" set:html={JSON.stringify(jsonLd)} />
  </Fragment>

  <article class="relative min-h-screen">
    <BackgroundGrid />
    
    <div class="max-w-3xl mx-auto px-4 sm:px-6 py-12 mt-12">
      <PostHeader title={title} date={date} tags={tags} tldr={tldr} markdown={raw} />

      <div class="relative py-12 flex items-center justify-center overflow-hidden">
        <div class="absolute inset-0 flex items-center">
          <div class="w-full border-t border-zinc-200/30 dark:border-zinc-700/30"></div>
        </div>
        <div class="relative flex items-center justify-center w-8 h-8 rounded-full bg-gradient-to-b from-zinc-50/80 to-white/80 dark:from-zinc-800/80 dark:to-zinc-900/80 backdrop-blur-sm shadow-sm">
          <IconSeparator font-size={14} class="text-zinc-400 dark:text-zinc-500" />
        </div>
      </div>

      <div class="prose prose-zinc dark:prose-invert max-w-none
           prose-headings:font-bold prose-headings:tracking-tight 
           prose-headings:text-zinc-900 dark:prose-headings:text-zinc-100
           prose-p:text-zinc-600 dark:prose-p:text-zinc-300
           prose-img:rounded-xl prose-img:shadow-lg lg:prose-lg">
        <div class="hidden">
          <PostSummary slug={post.slug} content={raw} client:idle />
        </div>
        <Content />
      </div>
      
      <hr class="my-12 border-zinc-200/50 dark:border-zinc-800/50" />

      <PostNavigation prev={prev} next={next} />

      <RelatedPosts currentSlug={post.slug} tags={tags} />
      
      <!-- 评论区 -->
      <div class="comments-container mt-16">
        <div class="comment-header flex items-center gap-2 mb-6">
          <IconMessageCircle class="text-zinc-500 dark:text-zinc-400" />
          <h2 class="text-xl font-semibold text-zinc-800 dark:text-zinc-200">评论</h2>
        </div>
        
        <div class="giscus-container">
          <div class="giscus"></div>
        </div>
      </div>
      
      <footer class="mt-16">
        <License />
      </footer>
    </div>
  </article>

  <Visitor slug={post.slug} title={post.data.title} client:load />
  
  <BackToTop />
</BaseLayout>

<script src="https://giscus.app/client.js"
        data-repo="coderfe/www"
        data-repo-id="MDEwOlJlcG9zaXRvcnkxNjA5OTc3MTY="
        data-category="Comments"
        data-category-id="DIC_kwDOCZihVM4CoBlh"
        data-mapping="pathname"
        data-strict="0"
        data-reactions-enabled="1"
        data-emit-metadata="0"
        data-input-position="top"
        data-theme="preferred_color_scheme"
        data-lang="zh-CN"
        data-loading="lazy"
        crossorigin="anonymous"
        async>
</script>
