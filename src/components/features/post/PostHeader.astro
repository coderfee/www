---
import dayjs from 'dayjs';
import IconCalendar from '~icons/tabler/calendar';
import IconHash from '~icons/tabler/hash';
import IconCopy from '~icons/tabler/copy';

interface Props {
  title: string;
  date?: Date;
  tags?: string[];
  tldr?: string;
  markdown?: string;
}

const { title, date, tags = [], tldr, markdown } = Astro.props;
---

<div>
  <h1 class="text-4xl sm:text-5xl font-bold tracking-tight text-zinc-900 dark:text-zinc-100 mb-6">
    {title}
  </h1>
  
  <div class="flex flex-wrap items-center gap-4 font-mono text-xs text-zinc-500 dark:text-zinc-400">
    {date && (
      <time datetime={date.toISOString()} class="flex items-center">
        <IconCalendar class="mr-1.5 opacity-70"></IconCalendar>
        {dayjs(date).format("DD MMM, YY")}
      </time>
    )}
    
    {tags.length > 0 && (
      <div class="flex flex-wrap gap-2">
        {tags.map((tag) => (
          <a 
            href={`/blog/tags/${tag}`} 
            class="inline-flex items-center px-2 py-0.5 rounded-md text-xs font-medium 
                   text-zinc-600 dark:text-zinc-400
                   hover:text-zinc-900 dark:hover:text-zinc-200
                   transition-colors duration-300"
          >
            <IconHash class="mr-1 opacity-70"></IconHash>
            {tag}
          </a>
        ))}
      </div>
    )}

    {markdown && (
      <a href="javascript:void(0)" class="inline-flex items-center px-2 py-0.5 rounded-md text-xs font-medium 
                   text-zinc-600 dark:text-zinc-400
                   hover:text-zinc-900 dark:hover:text-zinc-200
                   transition-colors duration-300" id="copy-markdown">
        <IconCopy class="mr-1 opacity-70"></IconCopy>
        复制 Markdown
      </a>
    )}
  </div>
  
  {tldr && (
    <div class="mt-8">
      <p class="text-lg text-zinc-500 dark:text-zinc-300 italic">
        {tldr}
      </p>
    </div>
  )}
</div>

<script is:inline define:vars={{ title, markdown }}>
  const copyMarkdown = document.getElementById('copy-markdown');
  copyMarkdown.addEventListener('click', () => {
    navigator.clipboard.writeText(`# ${title}\n\n${markdown}`);
  });
</script>
