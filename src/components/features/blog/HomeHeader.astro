---
export interface Props {
  title: string;
}

const { title = "coderfee's blog" } = Astro.props;
---

<header class="relative mb-16 mt-10 sm:mb-24">
  <div class="absolute w-full h-full max-w-2xl mx-auto inset-0 bg-[radial-gradient(ellipse_at_center,_var(--tw-gradient-stops))] from-violet-500/5 via-fuchsia-500/5 to-transparent blur-xl animate-gradient"></div>
  
  <h1 class="text-5xl sm:text-7xl font-black text-center leading-tight select-none perspective">
    <span class="block main-title title-rotate">{title!.toUpperCase()}</span>
    
    <div class="text-base sm:text-xl font-medium mt-4 block text-gray-600 dark:text-gray-300 h-6">
      <div class="typing-container">
        <span id="typing-text" class="typing-text"></span>
        <span class="typing-cursor"></span>
      </div>
    </div>
  </h1>
</header>

<style>
  @keyframes gradient-shift {
    0% { background-position: 0% 50%; }
    50% { background-position: 100% 50%; }
    100% { background-position: 0% 50%; }
  }
  
  @keyframes blink {
    0%, 100% { opacity: 1; }
    50% { opacity: 0; }
  }
  
  .main-title {
    background-image: linear-gradient(120deg, #9333ea, #ec4899, #0ea5e9);
    background-size: 200% auto;
    background-clip: text;
    -webkit-background-clip: text;
    color: transparent;
    animation: gradient-shift 6s linear infinite;
    text-shadow: 0 0 30px rgba(147, 51, 234, 0.25);
  }
  
  .animate-gradient {
    animation: gradient-shift 6s ease infinite;
  }
  
  .typing-container {
    display: flex;
    justify-content: center;
    align-items: center;
    height: 100%;
    position: relative;
  }
  
  .typing-text {
    display: inline-block;
  }
  
  .typing-cursor {
    display: inline-block;
    margin-left: 1px;
    width: 2px;
    height: 1.2em;
    background-color: currentColor;
    position: relative;
    top: 2px;
    animation: cursor-blink 1.2s step-end infinite;
    opacity: 0.8;
  }
  
  @keyframes cursor-blink {
    0%, 100% { opacity: 0; }
    50% { opacity: 0.8; }
  }

  .perspective {
    perspective: 1000px;
  }
  
  .title-rotate {
    display: inline-block;
    transition: transform 0.1s ease-out;
    transform-style: preserve-3d;
    will-change: transform;
  }
</style>

<script>
const phrases = [
  '写代码，也写生活',
  '记录，思考，分享，成长',
  '技术没有边界，生活却有温度',
  '不要回答，不要回答，不要回答…'
]

function initTypingEffect() {
  const typingText = document.getElementById('typing-text');
  if (!typingText) return;
  
  let phraseIndex = 0;
  let charIndex = 0;
  let isDeleting = false;
  let typingDelay = 300;
  
  function type() {
    const currentPhrase = phrases[phraseIndex];
    
    if (isDeleting) {
      typingText!.textContent = currentPhrase.substring(0, charIndex - 1);
      charIndex--;
      typingDelay = 30 + Math.random() * 40;
    } else {
      typingText!.textContent = currentPhrase.substring(0, charIndex + 1);
      charIndex++;
      const char = currentPhrase[charIndex - 1];
      if (char === '，' || char === '。' || char === '…') {
        typingDelay = 400 + Math.random() * 100;
      } else {
        typingDelay = 80 + Math.random() * 100;
      }
    }
    
    if (!isDeleting && charIndex >= currentPhrase.length) {
      isDeleting = true;
      typingDelay = 2000;
    } else if (isDeleting && charIndex === 0) {
      isDeleting = false;
      phraseIndex = (phraseIndex + 1) % phrases.length;
      typingDelay = 700;
    }
    
    setTimeout(type, typingDelay);
  }

  typingText.textContent = '';
  setTimeout(type, 800);
}

function initTitleRotation() {
  const title = document.querySelector('.title-rotate') as HTMLHeadingElement;
  if (!title) return;
  
  const maxRotate = 5;
  const maxRotateX = 2;
  
  function handleMouseMove(e: MouseEvent) {
    const rect = title!.getBoundingClientRect();
    const centerX = rect.left + rect.width / 2;
    const centerY = rect.top + rect.height / 2;
    
    const rotateY = ((e.clientX - centerX) / (rect.width / 2)) * maxRotate;
    let rotateX = -((e.clientY - centerY) / (rect.height / 2)) * maxRotateX;
    
    rotateX = Math.max(-maxRotateX, Math.min(maxRotateX, rotateX));
    
    title!.style.transform = `rotateX(${rotateX}deg) rotateY(${rotateY}deg)`;
  }
  
  function handleMouseLeave() {
    title!.style.transform = 'rotateX(0) rotateY(0)';
  }
  
  document.addEventListener('mousemove', handleMouseMove);
  title!.addEventListener('mouseleave', handleMouseLeave);
}

function initAllEffects() {
  initTypingEffect();
  initTitleRotation();
}

document.addEventListener('DOMContentLoaded', initAllEffects);
document.addEventListener('astro:after-swap', initAllEffects);
</script>
